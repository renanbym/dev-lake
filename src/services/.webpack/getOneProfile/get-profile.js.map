{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"babel-runtime/core-js/json/stringify\"","webpack:///external \"babel-runtime/core-js/promise\"","webpack:///external \"mongoose\"","webpack:///./get-profile.js","webpack:///../_core/connection.js","webpack:///../_core/secrets-storage.js","webpack:///external \"aws-sdk\"","webpack:///../models/Perfil.js","webpack:///external \"bluebird\"","webpack:///external \"mongodb\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","connect","Perfil","ObjectId","handler","async","event","context","callback","callbackWaitsForEmptyEventLoop","result","search","pathParameters","id","_id","find","length","statusCode","body","error","message","mongoose","getSecret","connection","isConnected","replacerRegexStringify","val","constructor","RegExp","toString","customLogger","coll","op","doc","proj","process","stdout","write","verbose","resolve","reject","set","console","log","connectionString","reconnectTries","Number","MAX_VALUE","reconnectInterval","e","disconnect","close","ssm","SSM","region","env","AWS_REGION","secrets","expiryIn","Date","searchKey","getAll","getParameters","getParametersByPath","ssmParams","promise","Parameters","Name","replace","Path","Value","NextToken","getTime","Recursive","WithDecryption","Promise","modelSchema","Schema","url","type","String","index","unique","status","enum","headline","location","summary","positions","title","company","description","date1","date2","roles","educations","degree","skills","count","position","ranking","permanencia","date","default","now","update","global","model"],"mappings":"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","file":"get-profile.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = require(\"babel-runtime/core-js/json/stringify\");","module.exports = require(\"babel-runtime/core-js/promise\");","module.exports = require(\"mongoose\");","const { connect } = require('../_core/connection')\nconst Perfil = require('../models/Perfil')\nconst { ObjectId } = require('mongodb')\n\nconst parseBody = (event) => {\n\n  if (event.isOffline) {\n    return event\n  } else {\n    return JSON.parse(event.body)\n  }\n\n}\n\nconst handler = async (event, context, callback) => {\n  context.callbackWaitsForEmptyEventLoop = false\n\n  try {\n    let search = {};\n\n    await connect(true)\n\n    if (event.pathParameters) {\n      if (event.pathParameters.id) {\n        search._id = new ObjectId(event.pathParameters.id);\n      }\n    }\n\n    let result;\n\n    if (search._id) {\n      result = await Perfil.find(search);\n      if (result.length > 0) {\n        result = result[0];\n      } else {\n        return callback(null, { statusCode: 400, body: JSON.stringify({ error: 'error' }) })\n      }\n    } else {\n      result = await Perfil.find(search);\n    }\n\n\n    return callback(null, { statusCode: 200, body: JSON.stringify(result) })\n  } catch (error) {\n    return callback(null, { statusCode: 400, body: JSON.stringify({ error: error.message }) })\n  }\n\n}\n\n\nmodule.exports.handler = handler","const mongoose = require('mongoose');\nconst { getSecret } = require('./secrets-storage');\nlet isConnected = false;\nlet connection;\n\nconst replacerRegexStringify = (name, val) => {\n    // // convert RegExp to string\n    if (val && val.constructor === RegExp) {\n        return val.toString();\n    } else if (name === 'str') {\n        return undefined;\n    }\n    return val;\n};\n\nconst customLogger = (coll, op, doc, proj) => {\n    process.stdout.write(`${coll}.${op}(${JSON.stringify(doc, replacerRegexStringify)}`);\n    if (proj) {\n        process.stdout.write(`,${JSON.stringify(proj, replacerRegexStringify)})\\n`);\n    } else {\n        process.stdout.write(')\\n');\n    }\n};\n\n\nconst connect = (verbose = false) => new Promise(async (resolve, reject) => {\n\n    try {\n        if (verbose) {\n            mongoose.set('debug', customLogger);\n        }\n\n        if (isConnected) {\n            console.log('===> Aproveitando conexao');\n            return resolve(connection);\n        }\n\n        const connectionString = await getSecret('mongodb_uri')\n        console.log(connectionString)\n        connection = await mongoose.connect(connectionString, {\n            reconnectTries: Number.MAX_VALUE,\n            reconnectInterval: 1000\n        });\n\n        if (connection === mongoose) {\n            isConnected = true;\n            return resolve(connection);\n        }\n\n        return reject('error');\n    } catch (e) {\n        console.log('===> connect error', e);\n        return reject(e);\n    }\n});\n\nconst disconnect = () => new Promise(async (resolve, reject) => {\n    try {\n        mongoose.connection.close(() => {\n            isConnected = false;\n            console.log('===> Desconectando conexao');\n            resolve();\n        });\n    } catch (e) {\n        console.log('===> disconnect error', e);\n        return reject(e);\n    }\n});\n\n\nmodule.exports = { connect, disconnect, mongoose };","const AWS = require('aws-sdk');\n\nconst ssm = new AWS.SSM({ region: process.env.AWS_REGION });\n\nconst EXPIRY_TIME = 3 * 60 * 1000; // 3 min\nlet secrets;\nlet expiryIn = new Date(0);\n\nconst searchKey = key => secrets[key];\n\nconst getAll = () => new Promise((resolve, reject) => {\n    secrets = {};\n\n    try {\n        const params = {\n            Recursive: true,\n            WithDecryption: true\n        };\n\n        const getParameters = async (ssmParams) => {\n            const result = await ssm.getParametersByPath(ssmParams).promise();\n            console.log(result);\n            for (const p of result.Parameters) {\n                const key = p.Name.replace(`${ssmParams.Path}/`, '');\n                secrets[key] = p.Value;\n            }\n\n            if (result.NextToken) {\n                ssmParams.NextToken = result.NextToken;\n                getParameters(ssmParams);\n            } else {\n                expiryIn = new Date(new Date().getTime() + EXPIRY_TIME);\n                return resolve(secrets);\n            }\n        };\n\n        return getParameters(params);\n    } catch (e) {\n        return reject(('Not Found Secret'));\n    }\n\n});\n\nconst getSecret = key => new Promise(async (resolve, reject) => {\n    try {\n        let result;\n\n\n        const now = new Date();\n        if (now >= expiryIn) {\n            secrets = null;\n        }\n\n        if (secrets) {\n            // já carregou, busca a chave\n            result = searchKey(key);\n\n            if (result) {\n                return resolve(result);\n            }\n\n            throw ('Not Found Secret.');\n        }\n\n        await getAll();\n\n        if (secrets) {\n            result = searchKey(key);\n\n            if (result) {\n                return resolve(result);\n            }\n            return reject(('Not Found Secret!'));\n        }\n    } catch (e) {\n        return reject(('Not Found Secret'));\n    }\n});\n\nmodule.exports = { getSecret, getAll };","module.exports = require(\"aws-sdk\");","import mongoose, { Schema } from 'mongoose';\nmongoose.Promise = require('bluebird');\nconst modelSchema = new Schema({\n    url: { type: String, require: true, index: { unique: true } },\n    status: { type: String, enum: ['created', 'updated', 'modernize'], require: true },\n    name: String,\n    headline: String,\n    location: String,\n    summary: String,\n    positions: [{\n        _id: false,\n        title: { type: String },\n        company: { type: String },\n        description: { type: String },\n        date1: { type: String },\n        date2: { type: String },\n        roles: [{\n            _id: false,\n            title: { type: String },\n            company: { type: String },\n            description: { type: String },\n            date1: { type: String },\n            date2: { type: String },\n        }]\n    }],\n    educations: [{\n        _id: false,\n        title: String,\n        degree: String,\n        date1: Date,\n        date2: Date\n    }],\n    skills: [{\n        _id: false,\n        title: String,\n        count: Number\n    }],\n    search: [\n        {\n            _id: false,\n            position: String,\n            location: String\n        }\n    ],\n    ranking: {\n        _id: false,\n        permanencia: String,\n    },\n    date: { type: Date, default: Date.now },\n    update: { type: Date, default: Date.now },\n})\n\nglobal.modelSchema = global.modelSchema || mongoose.model('Perfil', modelSchema);\nmodule.exports = global.modelSchema;","module.exports = require(\"bluebird\");","module.exports = require(\"mongodb\");"],"sourceRoot":""}